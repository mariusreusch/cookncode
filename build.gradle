buildscript {
    ext {
        springBootVersion = '1.5.7.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "com.moowork.gradle:gradle-node-plugin:1.1.1"
    }
}

plugins {
    id "org.flywaydb.flyway" version "4.2.0"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply from: "server.gradle"
apply from: "frontend.gradle"


project.ext['flyway.url'] = 'jdbc:mysql://localhost:3306/cookncode'
project.ext['flyway.user'] = 'root'
project.ext['flyway.password'] = 'root'
project.ext['flyway.schemas'] = 'cookncode'

jar {
    baseName = 'cookncode'
    version = '0.0.1-SNAPSHOT'
    archiveName = baseName + '.jar'
    into("static") {
        from clientArtifacts
    }

}

task zip(type: Zip, dependsOn: bootRepackage) {
    from ('.ebextensions') {
        into '.ebextensions'
    }
    from (jar.outputs.files) {
        into '.'
    }
    destinationDir project.buildDir
}

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-actuator:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-security:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    compile("org.springframework.boot:spring-boot-configuration-processor:$springBootVersion")
    compile("org.springframework.security.oauth:spring-security-oauth2")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.1")
    compile("com.github.ulisesbocchio:jasypt-spring-boot-starter:1.16")
    compile("mysql:mysql-connector-java:5.1.27")
    compile("org.flywaydb:flyway-core")

    runtime("org.springframework.boot:spring-boot-devtools")

    testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
    testCompile("org.assertj:assertj-core:3.8.0")
}


task startMysqlDockerImage(type: Exec) {
    workingDir 'docker/mysql'
    commandLine './start.sh'
}